#include <bits/stdc++.h>
using namespace std;
#define SIZE 1000

vector <int> G[SIZE];
pair<bool, bool> tab[SIZE];


bool even[SIZE];
bool odd[SIZE];

void DFS(int v, bool odl)
{
    if(odl == true) even[v] = true;
    if(odl == false) odd[v] = true;  //

    for(auto w : G[v])
    {
        if(odd[w] == false and odl)  // nie bylem nieparzyscie i akt droga jest parzysta
        {
            DFS(w, !odl);
        }

        if(even[w] == false and !odl)
        {
           DFS(w, !odl);
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n=5;

    G[1].push_back(2);
    G[2].push_back(1);

    G[2].push_back(3);
    G[3].push_back(2);

    G[3].push_back(4);
    G[4].push_back(3);

    G[4].push_back(5);
    G[5].push_back(4);

   // G[3].push_back(5);
    //G[5].push_back(3);

    G[5].push_back(6);
    G[6].push_back(5);

    DFS(1, true);

    for(int i=0; i<=6; i++)
    {
        cout<<i<<" "<<even[i]<<" "<<odd[i]<<"\n";
    }


    cout<<1e6<<"\n";

    int a=1;
    int b=6;

    if((even[a] and even[b]) or (odd[a] and odd[b]))
        cout<<"Yes\n";
    else cout<<"No\n";





    return 0;
}
